#!/bin/sh

# Copyright © 2016 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the “Software”), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e -u

if [ $# -eq 0 ]
then
    printf 'usage: %s <image>\n' "$0" >&2
    exit 1
fi

image=$1
shift

if [ "$image" = tmp ]
then
    image=$(mktemp tmpqemu.XXXXXXXX)
    trap 'rm -f "$image"' EXIT
    rsync --sparse -P base.qemu "$image"
elif [ ! -e "$image" ]
then
    rsync --sparse -P base.qemu "$image"
fi

image_dir="$(dirname "$image")"
[ "$image_dir" = . ]
image_base="$(basename "$image" .qemu)"
screen_name="vm-$(basename "$image" .qemu)"

cpu=host
smp=$(nproc)
mem=576M
vga=virtio
display=curses
soundhw=
disk_if=virtio
nic_model=virtio
rtc='base=utc'
ssh_port=
storage_type=virtio

if [ -f options ]
then
    . ./options
fi
if [ -f "${image_base}.options" ]
then
    . "./${image_base}.options"
fi

usernet=user
if [ -n "$ssh_port" ]
then
    usernet="$usernet,hostfwd=tcp:127.0.0.1:$ssh_port-:22"
fi
if [ -d storage/ ]
then
    if [ "$storage_type" = virtio ]
    then
        set -- -virtfs local,path=storage/,mount_tag=storage,security_model=mapped "$@"
    elif [ "$storage_type" = fat ]
    then
        set -- -drive file=fat:storage/,index=1 "$@"
    else
        printf '%s: invalid storage_type: %s' "$0" "$storage_type"
    fi
fi

screen -S "$screen_name" \
qemu-system-x86_64 \
    -drive "file=$image,index=0,if=$disk_if,media=disk,discard=unmap" \
    -nodefaults \
    -cpu "$cpu" \
    -smp "$smp" \
    -m "$mem" \
    -vga "$vga" \
    -display "$display" \
    -soundhw "$soundhw" \
    -net 'nic,model='$nic_model -net "$usernet" \
    -rtc "$rtc" \
    "$@"

# vim:ts=4 sts=4 sw=4 et
